前提：
	64位Linux
	内核3.10 或更高版本

在线安装
	curl -sSL https://get.daocloud.io/docker | sh

创建分组，把当前用户加入docker分组
	sudo groupadd docker
	sudo usermod -aG docker 当前用户名

启动docker服务
	service docker start

配置加速器
	nano /lib/systemd/system/docker.service打开文本文件
	在ExecStart那一行的末尾插入 --registry-mirror=https://jxus37ac.mirror.aliyuncs.com 
	保存配置：systemctl daemon-reload
	重启服务：service docker restart

运行容器
	docker run -it ubuntu:15.10 /bin/bash
		docker：Docker 的二进制执行文件
		run：与前面的 docker 组合来运行一个容器
		-t：在新容器内指定一个伪终端或终端
		-i：允许你对容器内的标准输入进行交互
		-d: 守护方式
		-p 80:8080 ：指定宿主机端口进行映射，将8080端口映射到宿主机的80端口上
		ubuntu:15.10：指定要运行的镜像，Docker首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像
		/bin/bash：在启动的容器里执行的命令
	【ctrl + D 退出容器 ,
		docker attach 容器id/名 重新进入容器，
		docker exec -it 容器id/名 /bin/bash 与正在运行的容器交互】

查询容器进程
	docker ps [-a 查询全部，包括已停止的]

停止容器
	docker stop 容器id/名

删除容器
	docker rm 容器id/名

重启停止的容器
	docker start 容器id/名

删除镜像
	docker rmi 镜像id/名

查看镜像
	docker images

打包镜像
	docker build -t 镜像名 .
		打包前准备工作
			jar包 和 Dockerfile 同一文件夹下
			Dockerfile：
				FROM 指定构成镜像的基础镜像源，如这个项目需要依赖jdk环境
				ADD 复制本地文件到目标容器的系统文件中
				EXPOSE 容器对外映射的端口
				ENTRYPOINT 配置容器启动后执行的命令